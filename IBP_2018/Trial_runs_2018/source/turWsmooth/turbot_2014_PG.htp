#if !defined(_TURBOT_2014_PG_)
#  define _TURBOT_2014_PG_

class model_data : public ad_comm{
  data_int nyrs;
  data_int nages;
  data_int F_time_knots;
  data_matrix catch_weights;
  data_matrix stock_weights;
  data_matrix bs2;
  dmatrix catch_weights_NA;
  dmatrix stock_weights_NA;
  ~model_data();
  model_data(int argc,char * argv[]);
  friend class model_parameters;
};

class model_parameters : public model_data ,
  public function_minimizer
{
public:
  ~model_parameters();
  void preliminary_calculations(void);
  void set_runtime(void);
  virtual void * mycast(void) {return (void*)this;}
  static int mc_phase(void)
  {
    return initial_params::mc_phase;
  }
  static int mceval_phase(void)
  {
    return initial_params::mceval_phase;
  }
  static int sd_phase(void)
  {
    return initial_params::sd_phase;
  }
  static int current_phase(void)
  {
    return initial_params::current_phase;
  }
  static int last_phase(void)
  {
    return (initial_params::current_phase
      >=initial_params::max_number_phases);
  }
  static prevariable current_feval(void)
  {
    return *objective_function_value::pobjfun;
  }
private:
  ivector integer_control_flags;
  dvector double_control_flags;
  param_init_vector logsigmaSWTS;
  param_init_vector logsigmaCWTS;
  param_init_number K;
  param_init_number loga0;
  param_init_number logCWfact;
  param_init_vector log_temp_wts_Linf;
  param_vector Linf;
  param_matrix CWT;
  param_matrix SWT;
  param_number f_cw;
  param_number f_sw;
  param_number prior_function_value;
  param_number likelihood_function_value;
  objective_function_value f;
public:
  virtual void userfunction(void);
  virtual void report(const dvector& gradients);
  virtual void final_calcs(void);
  model_parameters(int sz,int argc, char * argv[]);
  virtual void initializationfunction(void){}
 dvariable dnorm(const dvariable& x, const dvariable& mu, const dvariable& sd);
  void get_est_wts(void);
  void evaluate_the_objective_function(void);

};
#endif
